// Code generated by protoc-gen-go.
// source: coco_interference_scores.proto
// DO NOT EDIT!

/*
Package sirius is a generated protocol buffer package.

It is generated from these files:
	coco_interference_scores.proto
	data_object_name.proto
	job_desc.proto
	machine_perf_statistics_sample.proto
	reference_desc.proto
	resource_desc.proto
	resource_topology_node_desc.proto
	resource_vector.proto
	task_desc.proto
	task_final_report.proto
	task_instance_profile.proto
	task_perf_statistics_sample.proto
	whare_map_stats.proto

It has these top-level messages:
	CoCoInterferenceScores
	DataObjectName
	JobDescriptor
	MachinePerfStatisticsSample
	CpuUsage
	ReferenceDescriptor
	ResourceDescriptor
	ResourceTopologyNodeDescriptor
	ResourceVector
	TaskDescriptor
	TaskFinalReport
	TaskProfile
	TaskPerfStatisticsSample
	WhareMapStats
*/
package sirius

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CoCoInterferenceScores struct {
	DevilPenalty     *uint32 `protobuf:"varint,1,req,name=devil_penalty,def=0" json:"devil_penalty,omitempty"`
	RabbitPenalty    *uint32 `protobuf:"varint,2,req,name=rabbit_penalty,def=0" json:"rabbit_penalty,omitempty"`
	SheepPenalty     *uint32 `protobuf:"varint,3,req,name=sheep_penalty,def=0" json:"sheep_penalty,omitempty"`
	TurtlePenalty    *uint32 `protobuf:"varint,4,req,name=turtle_penalty,def=0" json:"turtle_penalty,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CoCoInterferenceScores) Reset()                    { *m = CoCoInterferenceScores{} }
func (m *CoCoInterferenceScores) String() string            { return proto.CompactTextString(m) }
func (*CoCoInterferenceScores) ProtoMessage()               {}
func (*CoCoInterferenceScores) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_CoCoInterferenceScores_DevilPenalty uint32 = 0
const Default_CoCoInterferenceScores_RabbitPenalty uint32 = 0
const Default_CoCoInterferenceScores_SheepPenalty uint32 = 0
const Default_CoCoInterferenceScores_TurtlePenalty uint32 = 0

func (m *CoCoInterferenceScores) GetDevilPenalty() uint32 {
	if m != nil && m.DevilPenalty != nil {
		return *m.DevilPenalty
	}
	return Default_CoCoInterferenceScores_DevilPenalty
}

func (m *CoCoInterferenceScores) GetRabbitPenalty() uint32 {
	if m != nil && m.RabbitPenalty != nil {
		return *m.RabbitPenalty
	}
	return Default_CoCoInterferenceScores_RabbitPenalty
}

func (m *CoCoInterferenceScores) GetSheepPenalty() uint32 {
	if m != nil && m.SheepPenalty != nil {
		return *m.SheepPenalty
	}
	return Default_CoCoInterferenceScores_SheepPenalty
}

func (m *CoCoInterferenceScores) GetTurtlePenalty() uint32 {
	if m != nil && m.TurtlePenalty != nil {
		return *m.TurtlePenalty
	}
	return Default_CoCoInterferenceScores_TurtlePenalty
}

func init() {
	proto.RegisterType((*CoCoInterferenceScores)(nil), "sirius.CoCoInterferenceScores")
}

func init() { proto.RegisterFile("coco_interference_scores.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0xce, 0x4f, 0xce,
	0x8f, 0xcf, 0xcc, 0x2b, 0x49, 0x2d, 0x4a, 0x4b, 0x2d, 0x4a, 0xcd, 0x4b, 0x4e, 0x8d, 0x2f, 0x4e,
	0xce, 0x2f, 0x4a, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0xce, 0x2c, 0xca,
	0x2c, 0x2d, 0x56, 0x6a, 0x62, 0xe4, 0x12, 0x73, 0xce, 0x77, 0xce, 0xf7, 0x44, 0x52, 0x19, 0x0c,
	0x56, 0x28, 0x24, 0xc1, 0xc5, 0x9b, 0x92, 0x5a, 0x96, 0x99, 0x13, 0x5f, 0x90, 0x9a, 0x97, 0x98,
	0x53, 0x52, 0x29, 0xc1, 0xa8, 0xc0, 0xa4, 0xc1, 0x6b, 0xc5, 0x68, 0x20, 0x24, 0xc9, 0xc5, 0x57,
	0x94, 0x98, 0x94, 0x94, 0x59, 0x02, 0x97, 0x62, 0x82, 0x49, 0x01, 0x35, 0x15, 0x67, 0xa4, 0xa6,
	0x16, 0xc0, 0x65, 0x98, 0x91, 0x34, 0x95, 0x94, 0x16, 0x95, 0xe4, 0xa4, 0xc2, 0xa5, 0x58, 0xa0,
	0x52, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x37, 0x85, 0x61, 0xad, 0x00, 0x00, 0x00,
}
